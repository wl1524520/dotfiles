#!/bin/bash
# shadowsocks scripts
#
# require shadowsocks-libev
#

# ip list
ip_tw1='211.22.145.199'
ip_tw2='60.251.29.120'
ip_sg1='116.251.210.142'
ip_kr1='103.214.68.127'

conf_file="$HOME/.shadowsocks.json"
ss_local='ss-local'
lc_bind='0.0.0.0'
lc_port=1080
pid_file='/tmp/ss-local.pid'

# show usage info
function show_usage()
{
    echo -ne "\033[31m"
    echo "Usage:" $0 "start|stop|status"
    echo -ne "\033[0m"
}

# show success info
function echo_success()
{
    echo -e "\033[43;31m$*\033[0m"
}

# show normal info
function echo_info()
{
    echo -e "\033[44;37m$*\033[0m"
}


if [ $# != 1 ];then
    show_usage $0
    exit 1
fi

case $1 in
    start)
        r_code=`ps aux | grep -v grep | grep "$ss_local" | wc -l`
        if [ $r_code -eq 1 ]; then
            echo_success 'ss-local is already running.'
            exit
        fi

        $ss_local -c $conf_file -b $lc_bind -l $lc_port -f $pid_file

        sleep 2
        r_code=`ps aux | grep -v grep | grep "$ss_local" | wc -l`
        if [ $r_code -eq 1 ]; then
            echo_success 'ss-local start success.'
        else
            echo_info 'ss-local failed to start.'
        fi
        ;;

    stop)
        r_code=`ps aux | grep -v grep | grep "$ss_local" | wc -l`
        if [ $r_code -eq 0 ]; then
            echo_success 'ss-local is already stopped.'
            exit
        fi

        pid=`cat $pid_file`
        kill -s QUIT $pid

        if [ $? -eq 0 ]; then
            echo_success 'ss-local stop success.'
            rm -rf $pid_file
        else
            echo_info 'ss-local failed to stop.'
        fi
        ;;

    status)
        r_code=`ps aux | grep -v grep | grep "$ss_local" | wc -l`
        if [ $r_code -eq 0 ]; then
            echo_info 'ss-local is stopped .'
        else
            ps aux | grep -v grep | grep "$ss_local"
            echo_info 'ss-local is running ...'
        fi
        ;;

    *)
        show_usage $0
        ;;
esac
